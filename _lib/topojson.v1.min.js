topojson=function(){function e(e,t){var n={},r={},i={};t.forEach(function(e){var t=a(e);(n[t[0]]||(n[t[0]]=[])).push(e);(n[t[1]]||(n[t[1]]=[])).push(~e)});t.forEach(function(e){var t=a(e),n=t[0],o=t[1],u,c;if(u=i[n]){delete i[u.end];u.push(e);u.end=o;if(c=r[o]){delete r[c.start];var s=c===u?u:u.concat(c);r[s.start=u.start]=i[s.end=c.end]=s}else if(c=i[o]){delete r[c.start];delete i[c.end];var s=u.concat(c.map(function(e){return~e}).reverse());r[s.start=u.start]=i[s.end=c.start]=s}else{r[u.start]=i[u.end]=u}}else if(u=r[o]){delete r[u.start];u.unshift(e);u.start=n;if(c=i[n]){delete i[c.end];var f=c===u?u:c.concat(u);r[f.start=c.start]=i[f.end=u.end]=f}else if(c=r[n]){delete r[c.start];delete i[c.end];var f=c.map(function(e){return~e}).reverse().concat(u);r[f.start=c.end]=i[f.end=u.end]=f}else{r[u.start]=i[u.end]=u}}else if(u=r[n]){delete r[u.start];u.unshift(~e);u.start=o;if(c=i[o]){delete i[c.end];var f=c===u?u:c.concat(u);r[f.start=c.start]=i[f.end=u.end]=f}else if(c=r[o]){delete r[c.start];delete i[c.end];var f=c.map(function(e){return~e}).reverse().concat(u);r[f.start=c.end]=i[f.end=u.end]=f}else{r[u.start]=i[u.end]=u}}else if(u=i[o]){delete i[u.end];u.push(~e);u.end=n;if(c=i[n]){delete r[c.start];var s=c===u?u:u.concat(c);r[s.start=u.start]=i[s.end=c.end]=s}else if(c=r[n]){delete r[c.start];delete i[c.end];var s=u.concat(c.map(function(e){return~e}).reverse());r[s.start=u.start]=i[s.end=c.start]=s}else{r[u.start]=i[u.end]=u}}else{u=[e];r[u.start=n]=i[u.end=o]=u}});function a(t){var n=e.arcs[t],r=n[0],i=[0,0];n.forEach(function(e){i[0]+=e[0],i[1]+=e[1]});return[r,i]}var o=[];for(var u in i)o.push(i[u]);return o}function t(t,n,r){var a=[];if(arguments.length>1){var o=[],u;function c(e){if(e<0)e=~e;(o[e]||(o[e]=[])).push(u)}function s(e){e.forEach(c)}function f(e){e.forEach(s)}function l(e){if(e.type==="GeometryCollection")e.geometries.forEach(l);else if(e.type in d){u=e;d[e.type](e.arcs)}}var d={LineString:s,MultiLineString:f,Polygon:f,MultiPolygon:function(e){e.forEach(f)}};l(n);o.forEach(arguments.length<3?function(e,t){a.push(t)}:function(e,t){if(r(e[0],e[e.length-1]))a.push(t)})}else{for(var p=0,h=t.arcs.length;p<h;++p)a.push(p)}return i(t,{type:"MultiLineString",arcs:e(t,a)})}function n(e,t){return t.type==="GeometryCollection"?{type:"FeatureCollection",features:t.geometries.map(function(t){return r(e,t)})}:r(e,t)}function r(e,t){var n={type:"Feature",id:t.id,properties:t.properties||{},geometry:i(e,t)};if(t.id==null)delete n.id;return n}function i(e,t){var n=e.transform,r=n.scale[0],i=n.scale[1],o=n.translate[0],u=n.translate[1],c=e.arcs;function s(e,t){if(t.length)t.pop();for(var n=c[e<0?~e:e],s=0,f=n.length,l=0,d=0,p;s<f;++s)t.push([(l+=(p=n[s])[0])*r+o,(d+=p[1])*i+u]);if(e<0)a(t,f)}function f(e){return[e[0]*r+o,e[1]*i+u]}function l(e){var t=[];for(var n=0,r=e.length;n<r;++n)s(e[n],t);if(t.length<2)t.push(t[0]);return t}function d(e){var t=l(e);while(t.length<4)t.push(t[0]);return t}function p(e){return e.map(d)}function h(e){var t=e.type;return t==="GeometryCollection"?{type:t,geometries:e.geometries.map(h)}:t in v?{type:t,coordinates:v[t](e)}:null}var v={Point:function(e){return f(e.coordinates)},MultiPoint:function(e){return e.coordinates.map(f)},LineString:function(e){return l(e.arcs)},MultiLineString:function(e){return e.arcs.map(l)},Polygon:function(e){return p(e.arcs)},MultiPolygon:function(e){return e.arcs.map(p)}};return h(t)}function a(e,t){var n,r=e.length,i=r-t;while(i<--r)n=e[i],e[i++]=e[r],e[r]=n}function o(e,t){var n=0,r=e.length;while(n<r){var i=n+r>>>1;if(e[i]<t)n=i+1;else r=i}return n}function u(e){var t=[],n=e.map(function(){return[]});function r(e,r){e.forEach(function(e){if(e<0)e=~e;var i=t[e]||(t[e]=[]);if(!i[r])i.forEach(function(e){var t,i;i=o(t=n[r],e);if(t[i]!==e)t.splice(i,0,e);i=o(t=n[e],r);if(t[i]!==r)t.splice(i,0,r)}),i[r]=r})}function i(e,t){e.forEach(function(e){r(e,t)})}function a(e,t){if(e.type==="GeometryCollection")e.geometries.forEach(function(e){a(e,t)});else if(e.type in u)u[e.type](e.arcs,t)}var u={LineString:r,MultiLineString:i,Polygon:i,MultiPolygon:function(e,t){e.forEach(function(e){i(e,t)})}};e.forEach(a);return n}return{version:"1.1.3",mesh:t,feature:n,neighbors:u}}();